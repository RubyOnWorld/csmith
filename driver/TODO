need a way to make sure existing processes, reductions, compiler
  builds etc. are either stopped fully, or else won't get in the way
  of whatever we do next

some of these interfaces want to be implemented by perl modules
  instead of executing separate scripts

pluggable scripts for 
  compiling a program
  evaluating a program
    including volatile testing, running simulators, etc
  uniquifying compiler crash strings

make a centralized file for config information

make automatic reduction work again

make compiler version search work again
  do this after reduction

write some docs

make log format easier to parse

when a new bug is found
  if known to be duplicate, drop it
  otherwise, reduce and version search

daily or so
  update and rebuild the compiler under test
  check all known test cases including fixed ones
  prioritize the broken ones and report them
  high priority
    seems new, for wrong-code bugs
    has a different string, for crash bugs
  report on progress to web, email, RSS feed
  if compiler can't be built, report this and sleep for a day

relevance estimation: does fault localization place the bug in 
  a part of the code that gets executed by our test suite?

make a VM image for the cloud, or a local machine

